---
/**
 * ProjectsParallax.astro
 * Tarjetas con efecto parallax al hacer scroll + reveal temprano.
 * Coloca imágenes (opcionales) en /src/assets/proyectos/.
 */

type Proj = {
  id: string;
  title: string;
  summary: string;
  img?: string;    // opcional
  href?: string;   // opcional (link a caso / nota)
  speed?: number;  // velocidad de parallax (px por cada 100vh aprox)
};

const projects: Proj[] = [
  {
    id: "topografo",
    title: "Operación Topógrafo",
    summary: "Investigación que reveló espionaje militar a periodistas y denunciantes.",
    img: "/assets/proyectos/topografo.jpg",
    href: "#",
    speed: 0.18,
  },
  {
    id: "vocerias",
    title: "Vocerías y despliegue",
    summary: "Fortalecimiento de vocerías y coherencia comunicacional en terreno.",
    img: "/assets/proyectos/vocerias.jpg",
    href: "#",
    speed: -0.12,
  },
  {
    id: "redes",
    title: "Comunicación digital",
    summary: "Estrategia y formatos nativos para alto rendimiento en redes sociales.",
    img: "/assets/proyectos/redes.jpg",
    href: "#",
    speed: 0.24,
  },
  // agrega más si quieres…
];
---

<section id="proyectos" class="section section--tight-top">
  <div class="container">
    <h2 class="h2">Proyectos</h2>
    <p class="section-intro" style="margin-bottom:1rem">
      Una selección de casos con impacto, contados en tarjetas con profundidad.
    </p>

    <div class="parallax-grid">
      {projects.map((p) => (
        <article
          class="parallax-card stage-item"
          data-speed={p.speed ?? 0.16}
          id={p.id}
        >
          <div class="parallax-media">
            {p.img ? (
              <img src={p.img} alt={p.title} loading="lazy" />
            ) : (
              <div class="parallax-fallback" aria-hidden="true" />
            )}
          </div>

          <div class="parallax-body">
            <h3 class="h3">{p.title}</h3>
            <p class="card-text" style="margin:.35rem 0 0">{p.summary}</p>
            {p.href && (
              <a class="btn btn-outline" href={p.href} style="margin-top:.85rem">Ver caso</a>
            )}
          </div>

          <!-- brillo suave -->
          <span class="parallax-glow" aria-hidden="true"></span>
        </article>
      ))}
    </div>
  </div>

  <script is:inline>
    // Reveal temprano
    (function(){
      const cards = document.querySelectorAll('.parallax-card');
      const io = new IntersectionObserver((es)=>{
        for (const e of es) {
          if (e.isIntersecting) {
            e.target.classList.add('is-on');
            io.unobserve(e.target);
          }
        }
      }, { rootMargin: '0% 0% -85% 0%', threshold: 0 });
      cards.forEach(c=>io.observe(c));
    })();

    // Parallax al hacer scroll: ajusta variable CSS --py
    (function(){
      const els = Array.from(document.querySelectorAll('.parallax-card'));
      if (!els.length) return;

      let ticking = false;
      const vh = () => window.innerHeight || document.documentElement.clientHeight;

      function update() {
        const mid = window.scrollY + vh()/2;
        for (const el of els) {
          const rect = el.getBoundingClientRect();
          const elMid = window.scrollY + rect.top + rect.height/2;
          const delta = (elMid - mid); // distancia al centro de viewport
          const speed = parseFloat(el.getAttribute('data-speed') || '0.16');
          const py = -(delta * speed * 0.25); // ajuste fino
          el.style.setProperty('--py', `${py}px`);
        }
        ticking = false;
      }

      function onScroll(){
        if (!ticking){ ticking = true; requestAnimationFrame(update); }
      }
      update();
      window.addEventListener('scroll', onScroll, { passive:true });
      window.addEventListener('resize', onScroll);
    })();
  </script>
</section>
