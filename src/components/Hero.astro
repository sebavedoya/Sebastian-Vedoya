---
// Hero con aparición por scroll mínima y sin IO
export interface Props {
  cv?: string;
  foto?: string;
}
const { cv, foto } = Astro.props;

const BASE = (import.meta.env.BASE_URL || "/").replace(/\/+$/, "");
const cvUrl = cv
  ? (/^https?:\/\//i.test(cv) ? cv : `${BASE}${cv.startsWith("/") ? cv : `/${cv}`}`)
  : `${BASE}/files/CV.pdf`;
const fotoUrl = foto
  ? (/^https?:\/\//i.test(foto) ? foto : `${BASE}${foto.startsWith("/") ? foto : `/${foto}`}`)
  : `${BASE}/assets/foto-hero.jpeg`;
---

<section id="inicio" class="hero hero-stage" aria-label="Presentación">
  <div class="container hero-stage-grid">
    <div class="stage-panel">
      <h1 class="hero-title">
        Sebastián Vedoya M.
        <span class="hero-sub">Comunicación Estratégica</span>
      </h1>
      <p class="lead">
        Estratega en comunicación con más de 10 años de experiencia en medios y gobierno.
        Me dedico a buscar respuestas complejas para entornos complejos.
      </p>

      <!-- Foto: oculta por defecto, aparece tras ~60px -->
      <div class="photo-float js-stage" id="heroPhoto" aria-hidden="true">
        <img src={fotoUrl} alt="Sebastián Vedoya M." loading="lazy" />
      </div>

      <!-- Contacto: aparece tras ~140px -->
      <div class="cta-row js-stage" id="heroContact" aria-hidden="true">
        <a class="btn btn-outline" href={cvUrl} download>Descargar CV</a>
        <a class="chip" href="mailto:seba.vedoya@gmail.com">seba.vedoya@gmail.com</a>
        <a class="chip" href="https://www.linkedin.com/in/sebastianvedoyam/" target="_blank" rel="noopener">LinkedIn</a>
      </div>
    </div>

    <!-- Pista invisible (altura para permitir el mini-scroll) -->
    <div class="stage-spacer" aria-hidden="true"></div>
  </div>

  <!-- Mantengo tu canvas de fondo, sin animaciones extra en el contenido -->
  <canvas id="bg-net" aria-hidden="true"></canvas>

  <script is:inline>
    // Umbrales MUY cortos
    const THRESH_PHOTO   = 60;   // px desde top
    const THRESH_CONTACT = 140;  // px desde top
    const HYSTERESIS     = 24;   // px para fade-out al subir (evita parpadeo)

    const elPhoto   = document.getElementById('heroPhoto');
    const elContact = document.getElementById('heroContact');

    // Estado
    let lastY = window.scrollY;
    let ticking = false;

    function applyStages(y){
      // Foto ON si scroll >= 60px; OFF si subes por debajo de (60px - HYSTERESIS)
      if (y >= THRESH_PHOTO) {
        elPhoto.classList.add('is-on');
        elPhoto.removeAttribute('aria-hidden');
      } else if (y < (THRESH_PHOTO - HYSTERESIS)) {
        elPhoto.classList.remove('is-on');
        elPhoto.setAttribute('aria-hidden', 'true');
      }

      // Contacto ON si scroll >= 140px; OFF si subes por debajo de (140px - HYSTERESIS)
      if (y >= THRESH_CONTACT) {
        elContact.classList.add('is-on');
        elContact.removeAttribute('aria-hidden');
      } else if (y < (THRESH_CONTACT - HYSTERESIS)) {
        elContact.classList.remove('is-on');
        elContact.setAttribute('aria-hidden', 'true');
      }
    }

    function onScroll(){
      lastY = window.scrollY || window.pageYOffset || 0;
      if(!ticking){
        ticking = true;
        requestAnimationFrame(()=>{
          applyStages(lastY);
          ticking = false;
        });
      }
    }

    // Inicializa inmediatamente (por si ya entras con scroll)
    applyStages(window.scrollY || 0);
    window.addEventListener('scroll', onScroll, { passive: true });

    // ===== (Opcional) tu red de nodos de fondo: ligera =====
    const canvas = document.getElementById('bg-net');
    const ctx = canvas.getContext('2d');
    const DPR = window.devicePixelRatio || 1;
    let nodes = [];
    function size(){
      const hero = document.getElementById('inicio');
      const w = hero.clientWidth, h = hero.clientHeight;
      canvas.width = w * DPR; canvas.height = h * DPR;
      canvas.style.width = w + 'px'; canvas.style.height = h + 'px';
      // reinit
      nodes = [];
      const count = 36;
      for(let i=0;i<count;i++){
        nodes.push({ x: Math.random()*canvas.width, y: Math.random()*canvas.height, vx:(Math.random()-.5)*.16*DPR, vy:(Math.random()-.5)*.16*DPR });
      }
    }
    function step(){
      for(const n of nodes){
        n.x+=n.vx; n.y+=n.vy;
        if(n.x<0||n.x>canvas.width) n.vx*=-1;
        if(n.y<0||n.y>canvas.height) n.vy*=-1;
      }
    }
    function draw(){
      ctx.clearRect(0,0,canvas.width,canvas.height);
      for(let i=0;i<nodes.length;i++){
        for(let j=i+1;j<nodes.length;j++){
          const dx = nodes[i].x - nodes[j].x, dy = nodes[i].y - nodes[j].y;
          const d = Math.hypot(dx,dy), MAX = 160*DPR;
          if(d<MAX){
            const a = 1 - d/MAX;
            const g = ctx.createLinearGradient(nodes[i].x,nodes[i].y,nodes[j].x,nodes[j].y);
            g.addColorStop(0, `rgba(26,77,110,${a*0.16})`);
            g.addColorStop(1, `rgba(184,115,51,${a*0.16})`);
            ctx.strokeStyle = g; ctx.lineWidth = 1*DPR;
            ctx.beginPath(); ctx.moveTo(nodes[i].x,nodes[i].y); ctx.lineTo(nodes[j].x,nodes[j].y); ctx.stroke();
          }
        }
      }
      for(const n of nodes){
        ctx.fillStyle = 'rgba(184,115,51,0.42)';
        ctx.beginPath(); ctx.arc(n.x,n.y,2.2*DPR,0,Math.PI*2); ctx.fill();
      }
      step(); requestAnimationFrame(draw);
    }
    window.addEventListener('resize', size);
    size(); requestAnimationFrame(draw);
  </script>
</section>

<style>
  /* Estructura sticky centrada */
  .hero-stage{ min-height: 140vh; }
  .hero-stage-grid{ position:relative; display:grid; grid-template-columns:1fr; }
  .stage-panel{
    position: sticky; top: 12vh;
    display:flex; flex-direction:column; align-items:center; text-align:center;
    padding: 10vh 0 8vh;
  }
  .stage-spacer{ height: 120vh; } /* espacio para permitir el mini-scroll */

  .hero-title{ margin:0 0 .6rem; }
  .hero-title .hero-sub{ display:block; margin-top:.15rem; color: var(--copper); }

  /* Estados por JS */
  .js-stage{ opacity:0; transform:translateY(14px); transition: opacity .35s ease, transform .35s ease; }
  .js-stage.is-on{ opacity:1; transform:none; }

  .photo-float img{
    width:360px;height:460px;object-fit:cover;object-position:center top;
    border-radius:16px; border:4px solid #0f1720;
    box-shadow:0 14px 40px rgba(0,0,0,.6);
  }

  @media (max-width:1040px){ .photo-float img{ width:320px; height:420px } }
  @media (max-width:640px){ .photo-float img{ width:280px; height:360px } }
</style>