---
// src/components/Hero.astro
export interface Props {
  cv?: string;
  foto?: string;
}

const { cv, foto } = Astro.props;

const BASE = (import.meta.env.BASE_URL || "/").replace(/\/+$/, "");

// CV robusto
const cvUrl = cv
  ? (/^https?:\/\//i.test(cv) ? cv : `${BASE}${cv.startsWith("/") ? cv : `/${cv}`}`)
  : `${BASE}/files/CV.pdf`;

// Foto robusta
const fotoUrl = foto
  ? (/^https?:\/\//i.test(foto) ? foto : `${BASE}${foto.startsWith("/") ? foto : `/${foto}`}`)
  : `${BASE}/assets/foto-hero.jpeg`;
---

<section id="inicio" class="hero hero-stage" aria-label="Presentación">
  <div class="container hero-stage-grid">
    <!-- Panel sticky: todo queda fijo aquí -->
    <div class="stage-panel">
      <h1 class="hero-title">
        Sebastián Vedoya M.
        <span class="hero-sub">Comunicación Estratégica</span>
      </h1>

      <p class="lead hero-lead">
        Estratega en comunicación con más de 10 años de experiencia en medios y gobierno.
        Me dedico a buscar respuestas complejas para entornos complejos.
      </p>

      <!-- Fase 1: foto (aparece con muy poco scroll y luego queda fija) -->
      <div class="photo-float" id="heroPhoto">
        <img
          src={fotoUrl}
          alt="Sebastián Vedoya M."
          width="360"
          height="460"
          loading="eager"
          fetchpriority="high"
        />
      </div>

      <!-- Fase 2: contacto (aparece poco después y queda fijo) -->
      <div class="cta-row cta-hidden" id="heroContact">
        <a class="btn btn-outline" href={cvUrl} download>Descargar CV</a>
        <a class="chip" href="mailto:seba.vedoya@gmail.com">seba.vedoya@gmail.com</a>
        <a class="chip" href="https://www.linkedin.com/in/sebastianvedoyam/" target="_blank" rel="noopener">LinkedIn</a>
      </div>
    </div>

    <!-- Pista de scroll mínima para que existan ‘unos’ píxeles de desplazamiento -->
    <div class="tiny-spacer" aria-hidden="true"></div>
  </div>

  <!-- Tu fondo de nodos actual -->
  <canvas id="bg-net" aria-hidden="true"></canvas>

  <script is:inline>
  // Elementos del hero
  const section  = document.getElementById('inicio');
  const elPhoto  = document.getElementById('heroPhoto');
  const elCtas   = document.getElementById('heroContact');
  const trgPhoto = document.getElementById('trgPhoto');
  const trgCtas  = document.getElementById('trgContact');

  // Observadores con umbral bajísimo para reaccionar de inmediato
  const opts = { root: null, rootMargin: '-95% 0% -5% 0%', threshold: 0 };

  // Foto: entra/sale al cruzar el trigger
  new IntersectionObserver((entries)=>{
    for (const e of entries) elPhoto.classList.toggle('is-on', e.isIntersecting);
  }, opts).observe(trgPhoto);

  // Contacto: entra/sale al cruzar el trigger
  new IntersectionObserver((entries)=>{
    for (const e of entries) elCtas.classList.toggle('is-on', e.isIntersecting);
  }, opts).observe(trgCtas);
</script>

<style>
  /* Hero centrado, sin animación de entrada */
  .hero-stage{
    min-height: 140vh;
    position: relative;
  }
  .hero-stage-grid{
    display: grid;
    grid-template-columns: 1fr;
  }

  .stage-panel{
    position: sticky;
    top: 12vh;              /* queda fijo alto */
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    padding: 10vh 0 8vh;
    gap: 0.8rem;
  }

  .hero-title{ margin: 0; }
  .hero-title .hero-sub{
    display:block; margin-top:.15rem; color: var(--copper);
  }

  .hero-lead{
    max-width: 60ch;
    margin: .25rem 0 0;
  }

  /* Foto: arranca oculta y aparece con fade corto; queda fija en el sticky */
  .photo-float{
    margin-top: 1.1rem;
    opacity: 0; transform: translateY(10px);
    transition: opacity .35s ease, transform .35s ease;
    filter: drop-shadow(0 20px 40px rgba(0,0,0,.45));
  }
  .photo-float.is-on{ opacity: 1; transform: none; }
  .photo-float img{
    width: 360px; height: 460px; object-fit: cover; object-position: center top;
    border-radius: 16px; border: 4px solid #0f1720; box-shadow: 0 14px 40px rgba(0,0,0,.6);
  }

  /* Contacto: aparece poquito después; sigue fijo en el sticky */
  .cta-hidden{
    opacity: 0; transform: translateY(8px);
    transition: opacity .3s ease, transform .3s ease;
  }
  .cta-hidden.is-on{ opacity: 1; transform: none; }

  .tiny-spacer{ height: 40vh; } /* un poco de pista de scroll */
  #bg-net{ position:absolute; inset:0; pointer-events:none; z-index:-1; }

  @media (max-width:1040px){
    .photo-float img{ width:320px; height:420px; }
  }
  @media (max-width:640px){
    .photo-float img{ width:280px; height:360px; }
  }
</style>