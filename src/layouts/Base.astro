---
import "../styles/global.css";
const {
  title = 'Sebastián Vedoya M. — Comunicación Estratégica',
  description = 'Estratega en comunicación con más de 10 años de experiencia en medios y gobierno. Me dedico a buscar respuestas complejas para entornos complejos.'
} = Astro.props;
---
<!doctype html>
<html lang="es">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <meta name="description" content={description} />
  <title>{title}</title>

  <!-- Favicon con base del sitio -->
  <link rel="icon" href={new URL('/favicon.svg', Astro.site).pathname} type="image/svg+xml" />

  <!-- Preferencia de color -->
  <meta name="color-scheme" content="dark light" />
  <meta name="theme-color" content="#0a0a0a" media="(prefers-color-scheme: dark)" />

  <!-- IBM Plex Sans -->
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link
    href="https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;600;700&display=swap"
    rel="stylesheet"
  />

  <!-- Google Analytics -->
  <script async src="https://www.googletagmanager.com/gtag/js?id=G-03ZMGB2V69"></script>
  <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){ dataLayer.push(arguments); }
    gtag('js', new Date());
    gtag('config', 'G-03ZMGB2V69');
  </script>
</head>
<body>
  <slot />

  <!-- Fade-in global (.reveal, [data-fade] y .stage-item) muy temprano -->
  <script is:inline>
    document.documentElement.classList.add('js');

    // Dirección de scroll (para posibles ajustes de salida suave, si quieres)
    let lastY = window.scrollY;
    let dir = 'down';
    window.addEventListener('scroll', () => {
      const y = window.scrollY;
      dir = y > lastY ? 'down' : 'up';
      lastY = y;
    }, { passive: true });

    const targets = document.querySelectorAll('.reveal,[data-fade],.stage-item');
    if (targets.length) {
      const io = new IntersectionObserver((entries) => {
        for (const e of entries) {
          const el = e.target;
          if (e.isIntersecting) {
            // Fade-in inmediato cuando apenas asoma
            el.classList.add('revealed','reveal--in','fade-in--visible','is-on');
            el.dataset.seen = '1';
            io.unobserve(el); // solo una vez (evita parpadeos)
          } else {
            // Si quisieras fade-out al subir, podrías re-observar aquí.
            // Dejamos sólo fade-in para mantener estabilidad visual.
          }
        }
      }, {
        threshold: 0,
        rootMargin: '0% 0% -85% 0%' // dispara cuando el elemento asoma muy poco
      });
      targets.forEach(t => io.observe(t));
    }
  </script>
</body>
</html>